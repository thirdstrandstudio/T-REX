{"abi":[{"type":"function","name":"addDeployer","inputs":[{"name":"deployer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"applyFeeDiscount","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"discount","type":"uint16","internalType":"uint16"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"batchAddDeployer","inputs":[{"name":"deployers","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"batchApplyFeeDiscount","inputs":[{"name":"deployers","type":"address[]","internalType":"address[]"},{"name":"discounts","type":"uint16[]","internalType":"uint16[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"batchDeployTREXSuite","inputs":[{"name":"_tokenDetails","type":"tuple[]","internalType":"struct ITREXFactory.TokenDetails[]","components":[{"name":"owner","type":"address","internalType":"address"},{"name":"name","type":"string","internalType":"string"},{"name":"symbol","type":"string","internalType":"string"},{"name":"decimals","type":"uint8","internalType":"uint8"},{"name":"irs","type":"address","internalType":"address"},{"name":"ONCHAINID","type":"address","internalType":"address"},{"name":"irAgents","type":"address[]","internalType":"address[]"},{"name":"tokenAgents","type":"address[]","internalType":"address[]"},{"name":"complianceModules","type":"address[]","internalType":"address[]"},{"name":"complianceSettings","type":"bytes[]","internalType":"bytes[]"}]},{"name":"_claimDetails","type":"tuple[]","internalType":"struct ITREXFactory.ClaimDetails[]","components":[{"name":"claimTopics","type":"uint256[]","internalType":"uint256[]"},{"name":"issuers","type":"address[]","internalType":"address[]"},{"name":"issuerClaims","type":"uint256[][]","internalType":"uint256[][]"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"batchRemoveDeployer","inputs":[{"name":"deployers","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"calculateFee","inputs":[{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"deployTREXSuite","inputs":[{"name":"_tokenDetails","type":"tuple","internalType":"struct ITREXFactory.TokenDetails","components":[{"name":"owner","type":"address","internalType":"address"},{"name":"name","type":"string","internalType":"string"},{"name":"symbol","type":"string","internalType":"string"},{"name":"decimals","type":"uint8","internalType":"uint8"},{"name":"irs","type":"address","internalType":"address"},{"name":"ONCHAINID","type":"address","internalType":"address"},{"name":"irAgents","type":"address[]","internalType":"address[]"},{"name":"tokenAgents","type":"address[]","internalType":"address[]"},{"name":"complianceModules","type":"address[]","internalType":"address[]"},{"name":"complianceSettings","type":"bytes[]","internalType":"bytes[]"}]},{"name":"_claimDetails","type":"tuple","internalType":"struct ITREXFactory.ClaimDetails","components":[{"name":"claimTopics","type":"uint256[]","internalType":"uint256[]"},{"name":"issuers","type":"address[]","internalType":"address[]"},{"name":"issuerClaims","type":"uint256[][]","internalType":"uint256[][]"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"enableDeploymentFee","inputs":[{"name":"_isEnabled","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getDeploymentFee","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct ITREXGateway.Fee","components":[{"name":"fee","type":"uint256","internalType":"uint256"},{"name":"feeToken","type":"address","internalType":"address"},{"name":"feeCollector","type":"address","internalType":"address"}]}],"stateMutability":"view"},{"type":"function","name":"getFactory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getPublicDeploymentStatus","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDeployer","inputs":[{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDeploymentFeeEnabled","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"removeDeployer","inputs":[{"name":"deployer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setDeploymentFee","inputs":[{"name":"_fee","type":"uint256","internalType":"uint256"},{"name":"_feeToken","type":"address","internalType":"address"},{"name":"_feeCollector","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFactory","inputs":[{"name":"factory","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPublicDeploymentStatus","inputs":[{"name":"_isEnabled","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferFactoryOwnership","inputs":[{"name":"_newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"DeployerAdded","inputs":[{"name":"deployer","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"DeployerRemoved","inputs":[{"name":"deployer","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"DeploymentFeeEnabled","inputs":[{"name":"isEnabled","type":"bool","indexed":true,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"DeploymentFeeSet","inputs":[{"name":"fee","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"feeToken","type":"address","indexed":true,"internalType":"address"},{"name":"feeCollector","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"FactorySet","inputs":[{"name":"factory","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"FeeDiscountApplied","inputs":[{"name":"deployer","type":"address","indexed":true,"internalType":"address"},{"name":"discount","type":"uint16","indexed":false,"internalType":"uint16"}],"anonymous":false},{"type":"event","name":"GatewaySuiteDeploymentProcessed","inputs":[{"name":"requester","type":"address","indexed":true,"internalType":"address"},{"name":"intendedOwner","type":"address","indexed":false,"internalType":"address"},{"name":"feeApplied","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PublicDeploymentStatusSet","inputs":[{"name":"publicDeploymentStatus","type":"bool","indexed":true,"internalType":"bool"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addDeployer(address)":"880f4039","applyFeeDiscount(address,uint16)":"75e14cff","batchAddDeployer(address[])":"e65811ff","batchApplyFeeDiscount(address[],uint16[])":"2782035e","batchDeployTREXSuite((address,string,string,uint8,address,address,address[],address[],address[],bytes[])[],(uint256[],address[],uint256[][])[])":"730b86a9","batchRemoveDeployer(address[])":"0065939e","calculateFee(address)":"465f5eb8","deployTREXSuite((address,string,string,uint8,address,address,address[],address[],address[],bytes[]),(uint256[],address[],uint256[][]))":"c8eebfcc","enableDeploymentFee(bool)":"a264f2bd","getDeploymentFee()":"46c549cc","getFactory()":"88cc58e4","getPublicDeploymentStatus()":"bfc2f10b","isDeployer(address)":"50c358a4","isDeploymentFeeEnabled()":"47706851","removeDeployer(address)":"f315df86","setDeploymentFee(uint256,address,address)":"5d46c283","setFactory(address)":"5bb47808","setPublicDeploymentStatus(bool)":"eca465c4","transferFactoryOwnership(address)":"9c5c5ce7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"DeployerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"DeployerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"}],\"name\":\"DeploymentFeeEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"name\":\"DeploymentFeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"FactorySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"discount\",\"type\":\"uint16\"}],\"name\":\"FeeDiscountApplied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"intendedOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeApplied\",\"type\":\"uint256\"}],\"name\":\"GatewaySuiteDeploymentProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"publicDeploymentStatus\",\"type\":\"bool\"}],\"name\":\"PublicDeploymentStatusSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"addDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"discount\",\"type\":\"uint16\"}],\"name\":\"applyFeeDiscount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"deployers\",\"type\":\"address[]\"}],\"name\":\"batchAddDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"deployers\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"discounts\",\"type\":\"uint16[]\"}],\"name\":\"batchApplyFeeDiscount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"irs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ONCHAINID\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"irAgents\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenAgents\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"complianceModules\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"complianceSettings\",\"type\":\"bytes[]\"}],\"internalType\":\"struct ITREXFactory.TokenDetails[]\",\"name\":\"_tokenDetails\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"issuers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"issuerClaims\",\"type\":\"uint256[][]\"}],\"internalType\":\"struct ITREXFactory.ClaimDetails[]\",\"name\":\"_claimDetails\",\"type\":\"tuple[]\"}],\"name\":\"batchDeployTREXSuite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"deployers\",\"type\":\"address[]\"}],\"name\":\"batchRemoveDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"calculateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"irs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ONCHAINID\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"irAgents\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenAgents\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"complianceModules\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"complianceSettings\",\"type\":\"bytes[]\"}],\"internalType\":\"struct ITREXFactory.TokenDetails\",\"name\":\"_tokenDetails\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"issuers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"issuerClaims\",\"type\":\"uint256[][]\"}],\"internalType\":\"struct ITREXFactory.ClaimDetails\",\"name\":\"_claimDetails\",\"type\":\"tuple\"}],\"name\":\"deployTREXSuite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isEnabled\",\"type\":\"bool\"}],\"name\":\"enableDeploymentFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeploymentFee\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"internalType\":\"struct ITREXGateway.Fee\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPublicDeploymentStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"isDeployer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDeploymentFeeEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"removeDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"}],\"name\":\"setDeploymentFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"setFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isEnabled\",\"type\":\"bool\"}],\"name\":\"setPublicDeploymentStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferFactoryOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addDeployer(address)\":{\"details\":\"Only an admin (owner or agent) can call this method. If the provided `deployer` address is already an approved deployer, the function will revert. Emits a `DeployerAdded` event upon successful addition.\",\"params\":{\"deployer\":\"Address to be added to the list of approved deployers. emits DeployerAdded Indicates that a new deployer address has been successfully added.\"}},\"applyFeeDiscount(address,uint16)\":{\"details\":\"Only an admin (owner or agent) can call this method. The fee discount is expressed per 10,000 (10000 = 100%, 1000 = 10%, etc.). If the discount exceeds 10000, the function will revert. Emits a `FeeDiscountApplied` event upon successful application.\",\"params\":{\"deployer\":\"Address of the deployer to which the discount will be applied.\",\"discount\":\"The discount rate, expressed per 10,000. emits FeeDiscountApplied Indicates that a fee discount has been successfully applied to a deployer.\"}},\"batchAddDeployer(address[])\":{\"details\":\"This function allows batch addition of deployers. It can only be called by an admin (owner or agent). The function will revert if the length of the `deployers` array is more than 500 to prevent excessive gas consumption. It will also revert if any address in the `deployers` array is already an approved deployer. Emits a `DeployerAdded` event for each successfully added deployer.\",\"params\":{\"deployers\":\"An array of addresses to be added to the list of approved deployers.\"}},\"batchApplyFeeDiscount(address[],uint16[])\":{\"details\":\"Allows batch application of fee discounts. Can only be called by an admin (owner or agent). The function will revert if the length of the `deployers` array exceeds 500, to prevent excessive gas consumption. Each discount in the `discounts` array is expressed per 10,000 (10000 = 100%, 1000 = 10%, etc.). The function will also revert if any discount in the `discounts` array exceeds 10000. Emits a `FeeDiscountApplied` event for each successfully applied discount.\",\"params\":{\"deployers\":\"An array of deployer addresses to which the discounts will be applied.\",\"discounts\":\"An array of discount rates, each corresponding to a deployer in the `deployers` array, expressed per 10,000.\"}},\"batchDeployTREXSuite((address,string,string,uint8,address,address,address[],address[],address[],bytes[])[],(uint256[],address[],uint256[][])[])\":{\"details\":\"This batch function allows deploying up to 5 TREX suites at once. It performs the same checks as `deployTREXSuite` for each suite: 1. If public deployments are disabled, only approved deployers can execute this function. 2. If public deployments are enabled, an external entity can deploy only on its behalf and not for other addresses unless it's an approved deployer. Deployment fees, if enabled and applicable, are collected for each suite deployment based on the deployer's address. Each TREX suite deployment is triggered via the factory contract, with a unique salt derived from the token owner's address and token name.\",\"params\":{\"_claimDetails\":\"Array of structs, each containing details related to claims for the respective token. reverts with BatchMaxLengthExceeded if the length of either `_tokenDetails` or `_claimDetails` arrays exceeds 5. reverts with PublicDeploymentsNotAllowed if public deployments are disabled and the caller is not an approved deployer. reverts with  PublicCannotDeployOnBehalf if public deployments are enabled and the caller attempts to deploy on behalf of a different address without being an approved deployer. emits GatewaySuiteDeploymentProcessed This event is emitted for each deployed suite, indicating the deployer, the token owner, and any fee applied.\",\"_tokenDetails\":\"Array of structs, each containing details necessary for token deployment such as name, symbol, etc.\"}},\"batchRemoveDeployer(address[])\":{\"details\":\"This function allows batch removal of deployers. It can only be called by an admin (owner or agent). The function will revert if the length of the `deployers` array is more than 500 to prevent excessive gas consumption. It will also revert if any address in the `deployers` array is not an approved deployer. Emits a `DeployerRemoved` event for each successfully removed deployer.\",\"params\":{\"deployers\":\"An array of addresses to be removed from the list of approved deployers.\"}},\"calculateFee(address)\":{\"details\":\"The fee discount, if any, is expressed per 10,000 (e.g., 10000 = 100%, 1000 = 10%, etc.). The final fee is derived by subtracting the discount amount from the original fee.\",\"params\":{\"deployer\":\"Address of the deployer for which the fee will be calculated.\"},\"returns\":{\"_0\":\"The calculated fee after accounting for potential discounts.\"}},\"deployTREXSuite((address,string,string,uint8,address,address,address[],address[],address[],bytes[]),(uint256[],address[],uint256[][]))\":{\"details\":\"This function performs multiple checks before deploying: 1. If public deployments are disabled, only approved deployers can execute this function. 2. If public deployments are enabled, an external entity can deploy only on its    behalf and not for other addresses unless it's an approved deployer. If deployment fees are enabled and applicable (after considering any discounts for the deployer), the fee is collected from the deployer's address. The actual TREX suite deployment is then triggered via the factory contract, and a unique salt is derived from the token owner's address and the token name for the deployment.\",\"params\":{\"_claimDetails\":\"Struct containing details related to claims for the token. emits GatewaySuiteDeploymentProcessed This event is emitted post-deployment, indicating the deployer, the token owner, and the fee applied.\",\"_tokenDetails\":\"Struct containing details necessary for token deployment such as name, symbol, etc.\"}},\"enableDeploymentFee(bool)\":{\"details\":\"Enables or disables the deployment fees. If the function call doesn't change the current status, it will revert. Only the owner can call this method. Emits a `DeploymentFeeEnabled` event upon successful execution. Reverts with `DeploymentFeesAlreadyEnabled` if trying to enable when already enabled. Reverts with `DeploymentFeesAlreadyDisabled` if trying to disable when already disabled.\",\"params\":{\"_isEnabled\":\"Determines if deployment fees are enabled (`true`) or disabled (`false`). emits DeploymentFeeEnabled When the new deployment fee status is set.\"}},\"getDeploymentFee()\":{\"details\":\"This function provides details about the deployment fee, including the amount, token type, and the collector address.\",\"returns\":{\"_0\":\"Fee struct containing:   - `fee`: The amount to be paid as the deployment fee.   - `feeToken`: Address of the token used for the deployment fee.   - `feeCollector`: Address that collects the deployment fees.\"}},\"getFactory()\":{\"details\":\"The Factory contract is responsible for deploying TREX contracts. This function allows querying its address.\",\"returns\":{\"_0\":\"Address of the current Factory contract.\"}},\"getPublicDeploymentStatus()\":{\"details\":\"Indicates whether public deployments of TREX contracts are currently allowed.\",\"returns\":{\"_0\":\"A boolean value representing the public deployment status: `true` if public deployments are allowed, `false` otherwise.\"}},\"isDeployer(address)\":{\"details\":\"Determines if a specific address has permissions to deploy TREX contracts.\",\"params\":{\"deployer\":\"Address to be checked for deployer permissions.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the provided address is an approved deployer (`true`) or not (`false`).\"}},\"isDeploymentFeeEnabled()\":{\"details\":\"Provides a way to determine if deployers are currently required to pay a fee when deploying TREX contracts.\",\"returns\":{\"_0\":\"A boolean value indicating whether the deployment fee is enabled (`true`) or disabled (`false`).\"}},\"removeDeployer(address)\":{\"details\":\"Only an admin (owner or agent) can call this method. If the provided `deployer` address is not an approved deployer, the function will revert. Emits a `DeployerRemoved` event upon successful removal.\",\"params\":{\"deployer\":\"Address to be removed from the list of approved deployers. emits DeployerRemoved Indicates that a deployer address has been successfully removed.\"}},\"setDeploymentFee(uint256,address,address)\":{\"details\":\"Only the owner can call this method. The function establishes the amount, token type, and collector address for the deployment fee. Reverts if either the provided `_feeToken` or `_feeCollector` address is zero. Emits a `DeploymentFeeSet` event upon successful execution.\",\"params\":{\"_fee\":\"The amount to be set as the deployment fee.\",\"_feeCollector\":\"Address that will collect the deployment fees. emits DeploymentFeeSet Indicates that the deployment fee details have been successfully set.\",\"_feeToken\":\"Address of the token used for the deployment fee.\"}},\"setFactory(address)\":{\"details\":\"Only the owner can call this method. Emits a `FactorySet` event upon successful execution. Reverts if the provided factory address is zero.\",\"params\":{\"factory\":\"The address of the new factory contract. emits FactorySet When the new factory address is set.\"}},\"setPublicDeploymentStatus(bool)\":{\"details\":\"Enables or disables public deployments. If the function call doesn't change the current status, it will revert. Only the owner can call this method. Emits a `PublicDeploymentStatusSet` event upon successful execution. Reverts with `PublicDeploymentAlreadyEnabled` if trying to enable when already enabled. Reverts with `PublicDeploymentAlreadyDisabled` if trying to disable when already disabled.\",\"params\":{\"_isEnabled\":\"Determines if public deployments are enabled (`true`) or disabled (`false`). emits PublicDeploymentStatusSet When the new public deployment status is set.\"}},\"transferFactoryOwnership(address)\":{\"details\":\"Only the owner can call this method. Utilizes the `transferOwnership` function of the Ownable pattern.\",\"params\":{\"_newOwner\":\"Address of the new owner for the Factory contract.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"DeployerAdded(address)\":{\"notice\":\"event emitted when an address is flagged as a deployer\"},\"DeployerRemoved(address)\":{\"notice\":\"event emitted when a deployer address loses deployment privileges\"},\"DeploymentFeeEnabled(bool)\":{\"notice\":\"event emitted when the deployment fees are enabled/disabled\"},\"DeploymentFeeSet(uint256,address,address)\":{\"notice\":\"event emitted when the deployment fees details are set/modified\"},\"FactorySet(address)\":{\"notice\":\"event emitted when the _factory variable is set/modified\"},\"FeeDiscountApplied(address,uint16)\":{\"notice\":\"event emitted when a discount on deployment fees is granted for an address\"},\"GatewaySuiteDeploymentProcessed(address,address,uint256)\":{\"notice\":\"event emitted whenever a TREX token has been deployed by the TREX factory through the use of the Gateway\"},\"PublicDeploymentStatusSet(bool)\":{\"notice\":\"event emitted when the public deployment status is set/modified\"}},\"kind\":\"user\",\"methods\":{\"addDeployer(address)\":{\"notice\":\"Adds an address to the list of approved deployers.\"},\"applyFeeDiscount(address,uint16)\":{\"notice\":\"Applies a fee discount to a specific deployer's address.\"},\"batchAddDeployer(address[])\":{\"notice\":\"Adds multiple addresses to the list of approved deployers in a single transaction.\"},\"batchApplyFeeDiscount(address[],uint16[])\":{\"notice\":\"Applies fee discounts to multiple deployers in a single transaction.\"},\"batchDeployTREXSuite((address,string,string,uint8,address,address,address[],address[],address[],bytes[])[],(uint256[],address[],uint256[][])[])\":{\"notice\":\"Deploys multiple TREX suites of contracts in a single transaction using provided arrays of token and claim details.\"},\"batchRemoveDeployer(address[])\":{\"notice\":\"Removes multiple addresses from the list of approved deployers in a single transaction.\"},\"calculateFee(address)\":{\"notice\":\"Calculates the deployment fee for a given deployer after accounting for any discounts.\"},\"deployTREXSuite((address,string,string,uint8,address,address,address[],address[],address[],bytes[]),(uint256[],address[],uint256[][]))\":{\"notice\":\"Deploys a TREX suite of contracts using provided token and claim details.\"},\"enableDeploymentFee(bool)\":{\"notice\":\"Toggles the deployment fee status for TREX contracts.\"},\"getDeploymentFee()\":{\"notice\":\"Retrieves the current deployment fee details.\"},\"getFactory()\":{\"notice\":\"Retrieves the address of the current Factory contract.\"},\"getPublicDeploymentStatus()\":{\"notice\":\"Retrieves the current public deployment status.\"},\"isDeployer(address)\":{\"notice\":\"Checks if the provided address is an approved deployer.\"},\"isDeploymentFeeEnabled()\":{\"notice\":\"Checks if the deployment fee is currently enabled.\"},\"removeDeployer(address)\":{\"notice\":\"Removes an address from the list of approved deployers.\"},\"setDeploymentFee(uint256,address,address)\":{\"notice\":\"Sets the deployment fee details for TREX contracts.\"},\"setFactory(address)\":{\"notice\":\"Sets the factory contract address used for deploying TREX smart contracts.\"},\"setPublicDeploymentStatus(bool)\":{\"notice\":\"Sets the status for public deployments of TREX contracts.\"},\"transferFactoryOwnership(address)\":{\"notice\":\"Transfers the ownership of the Factory contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/factory/ITREXGateway.sol\":\"ITREXGateway\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchain-id/solidity/contracts/=lib/onchain-id-solidity/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":onchain-id-solidity/=lib/onchain-id-solidity/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/factory/ITREXFactory.sol\":{\"keccak256\":\"0xe8e483ca3f8e6e0590b86bff194aa8402b06614afbe214cf1a645bd6c014ea90\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4fdea3036e387b175e4fb3ce10f1a5a98ee359f5e281da5b1d64b0fba7b08ac2\",\"dweb:/ipfs/QmQ2rKmVfErTpYMZYkz85A4RkCCYGZ7eMcF6cDiwKJSh5U\"]},\"contracts/factory/ITREXGateway.sol\":{\"keccak256\":\"0x51e0e72fd3cce091e7006f98c507d5b9e5dd0e05c7ca523fbc7e1ad45fa33b45\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ad64525807f2916a47ad3f766cff599b991a9f531d9397a47d8a992baea23314\",\"dweb:/ipfs/QmZoEX9sinZz9eU2sa3unNqWfvThWUB9zaho953hxwuCAJ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"deployer","type":"address","indexed":true}],"type":"event","name":"DeployerAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"deployer","type":"address","indexed":true}],"type":"event","name":"DeployerRemoved","anonymous":false},{"inputs":[{"internalType":"bool","name":"isEnabled","type":"bool","indexed":true}],"type":"event","name":"DeploymentFeeEnabled","anonymous":false},{"inputs":[{"internalType":"uint256","name":"fee","type":"uint256","indexed":true},{"internalType":"address","name":"feeToken","type":"address","indexed":true},{"internalType":"address","name":"feeCollector","type":"address","indexed":true}],"type":"event","name":"DeploymentFeeSet","anonymous":false},{"inputs":[{"internalType":"address","name":"factory","type":"address","indexed":true}],"type":"event","name":"FactorySet","anonymous":false},{"inputs":[{"internalType":"address","name":"deployer","type":"address","indexed":true},{"internalType":"uint16","name":"discount","type":"uint16","indexed":false}],"type":"event","name":"FeeDiscountApplied","anonymous":false},{"inputs":[{"internalType":"address","name":"requester","type":"address","indexed":true},{"internalType":"address","name":"intendedOwner","type":"address","indexed":false},{"internalType":"uint256","name":"feeApplied","type":"uint256","indexed":false}],"type":"event","name":"GatewaySuiteDeploymentProcessed","anonymous":false},{"inputs":[{"internalType":"bool","name":"publicDeploymentStatus","type":"bool","indexed":true}],"type":"event","name":"PublicDeploymentStatusSet","anonymous":false},{"inputs":[{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addDeployer"},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint16","name":"discount","type":"uint16"}],"stateMutability":"nonpayable","type":"function","name":"applyFeeDiscount"},{"inputs":[{"internalType":"address[]","name":"deployers","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"batchAddDeployer"},{"inputs":[{"internalType":"address[]","name":"deployers","type":"address[]"},{"internalType":"uint16[]","name":"discounts","type":"uint16[]"}],"stateMutability":"nonpayable","type":"function","name":"batchApplyFeeDiscount"},{"inputs":[{"internalType":"struct ITREXFactory.TokenDetails[]","name":"_tokenDetails","type":"tuple[]","components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"address","name":"irs","type":"address"},{"internalType":"address","name":"ONCHAINID","type":"address"},{"internalType":"address[]","name":"irAgents","type":"address[]"},{"internalType":"address[]","name":"tokenAgents","type":"address[]"},{"internalType":"address[]","name":"complianceModules","type":"address[]"},{"internalType":"bytes[]","name":"complianceSettings","type":"bytes[]"}]},{"internalType":"struct ITREXFactory.ClaimDetails[]","name":"_claimDetails","type":"tuple[]","components":[{"internalType":"uint256[]","name":"claimTopics","type":"uint256[]"},{"internalType":"address[]","name":"issuers","type":"address[]"},{"internalType":"uint256[][]","name":"issuerClaims","type":"uint256[][]"}]}],"stateMutability":"nonpayable","type":"function","name":"batchDeployTREXSuite"},{"inputs":[{"internalType":"address[]","name":"deployers","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"batchRemoveDeployer"},{"inputs":[{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"view","type":"function","name":"calculateFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"struct ITREXFactory.TokenDetails","name":"_tokenDetails","type":"tuple","components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"address","name":"irs","type":"address"},{"internalType":"address","name":"ONCHAINID","type":"address"},{"internalType":"address[]","name":"irAgents","type":"address[]"},{"internalType":"address[]","name":"tokenAgents","type":"address[]"},{"internalType":"address[]","name":"complianceModules","type":"address[]"},{"internalType":"bytes[]","name":"complianceSettings","type":"bytes[]"}]},{"internalType":"struct ITREXFactory.ClaimDetails","name":"_claimDetails","type":"tuple","components":[{"internalType":"uint256[]","name":"claimTopics","type":"uint256[]"},{"internalType":"address[]","name":"issuers","type":"address[]"},{"internalType":"uint256[][]","name":"issuerClaims","type":"uint256[][]"}]}],"stateMutability":"nonpayable","type":"function","name":"deployTREXSuite"},{"inputs":[{"internalType":"bool","name":"_isEnabled","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"enableDeploymentFee"},{"inputs":[],"stateMutability":"view","type":"function","name":"getDeploymentFee","outputs":[{"internalType":"struct ITREXGateway.Fee","name":"","type":"tuple","components":[{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"address","name":"feeCollector","type":"address"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getFactory","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getPublicDeploymentStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"view","type":"function","name":"isDeployer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isDeploymentFeeEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removeDeployer"},{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"},{"internalType":"address","name":"_feeToken","type":"address"},{"internalType":"address","name":"_feeCollector","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setDeploymentFee"},{"inputs":[{"internalType":"address","name":"factory","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setFactory"},{"inputs":[{"internalType":"bool","name":"_isEnabled","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setPublicDeploymentStatus"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferFactoryOwnership"}],"devdoc":{"kind":"dev","methods":{"addDeployer(address)":{"details":"Only an admin (owner or agent) can call this method. If the provided `deployer` address is already an approved deployer, the function will revert. Emits a `DeployerAdded` event upon successful addition.","params":{"deployer":"Address to be added to the list of approved deployers. emits DeployerAdded Indicates that a new deployer address has been successfully added."}},"applyFeeDiscount(address,uint16)":{"details":"Only an admin (owner or agent) can call this method. The fee discount is expressed per 10,000 (10000 = 100%, 1000 = 10%, etc.). If the discount exceeds 10000, the function will revert. Emits a `FeeDiscountApplied` event upon successful application.","params":{"deployer":"Address of the deployer to which the discount will be applied.","discount":"The discount rate, expressed per 10,000. emits FeeDiscountApplied Indicates that a fee discount has been successfully applied to a deployer."}},"batchAddDeployer(address[])":{"details":"This function allows batch addition of deployers. It can only be called by an admin (owner or agent). The function will revert if the length of the `deployers` array is more than 500 to prevent excessive gas consumption. It will also revert if any address in the `deployers` array is already an approved deployer. Emits a `DeployerAdded` event for each successfully added deployer.","params":{"deployers":"An array of addresses to be added to the list of approved deployers."}},"batchApplyFeeDiscount(address[],uint16[])":{"details":"Allows batch application of fee discounts. Can only be called by an admin (owner or agent). The function will revert if the length of the `deployers` array exceeds 500, to prevent excessive gas consumption. Each discount in the `discounts` array is expressed per 10,000 (10000 = 100%, 1000 = 10%, etc.). The function will also revert if any discount in the `discounts` array exceeds 10000. Emits a `FeeDiscountApplied` event for each successfully applied discount.","params":{"deployers":"An array of deployer addresses to which the discounts will be applied.","discounts":"An array of discount rates, each corresponding to a deployer in the `deployers` array, expressed per 10,000."}},"batchDeployTREXSuite((address,string,string,uint8,address,address,address[],address[],address[],bytes[])[],(uint256[],address[],uint256[][])[])":{"details":"This batch function allows deploying up to 5 TREX suites at once. It performs the same checks as `deployTREXSuite` for each suite: 1. If public deployments are disabled, only approved deployers can execute this function. 2. If public deployments are enabled, an external entity can deploy only on its behalf and not for other addresses unless it's an approved deployer. Deployment fees, if enabled and applicable, are collected for each suite deployment based on the deployer's address. Each TREX suite deployment is triggered via the factory contract, with a unique salt derived from the token owner's address and token name.","params":{"_claimDetails":"Array of structs, each containing details related to claims for the respective token. reverts with BatchMaxLengthExceeded if the length of either `_tokenDetails` or `_claimDetails` arrays exceeds 5. reverts with PublicDeploymentsNotAllowed if public deployments are disabled and the caller is not an approved deployer. reverts with  PublicCannotDeployOnBehalf if public deployments are enabled and the caller attempts to deploy on behalf of a different address without being an approved deployer. emits GatewaySuiteDeploymentProcessed This event is emitted for each deployed suite, indicating the deployer, the token owner, and any fee applied.","_tokenDetails":"Array of structs, each containing details necessary for token deployment such as name, symbol, etc."}},"batchRemoveDeployer(address[])":{"details":"This function allows batch removal of deployers. It can only be called by an admin (owner or agent). The function will revert if the length of the `deployers` array is more than 500 to prevent excessive gas consumption. It will also revert if any address in the `deployers` array is not an approved deployer. Emits a `DeployerRemoved` event for each successfully removed deployer.","params":{"deployers":"An array of addresses to be removed from the list of approved deployers."}},"calculateFee(address)":{"details":"The fee discount, if any, is expressed per 10,000 (e.g., 10000 = 100%, 1000 = 10%, etc.). The final fee is derived by subtracting the discount amount from the original fee.","params":{"deployer":"Address of the deployer for which the fee will be calculated."},"returns":{"_0":"The calculated fee after accounting for potential discounts."}},"deployTREXSuite((address,string,string,uint8,address,address,address[],address[],address[],bytes[]),(uint256[],address[],uint256[][]))":{"details":"This function performs multiple checks before deploying: 1. If public deployments are disabled, only approved deployers can execute this function. 2. If public deployments are enabled, an external entity can deploy only on its    behalf and not for other addresses unless it's an approved deployer. If deployment fees are enabled and applicable (after considering any discounts for the deployer), the fee is collected from the deployer's address. The actual TREX suite deployment is then triggered via the factory contract, and a unique salt is derived from the token owner's address and the token name for the deployment.","params":{"_claimDetails":"Struct containing details related to claims for the token. emits GatewaySuiteDeploymentProcessed This event is emitted post-deployment, indicating the deployer, the token owner, and the fee applied.","_tokenDetails":"Struct containing details necessary for token deployment such as name, symbol, etc."}},"enableDeploymentFee(bool)":{"details":"Enables or disables the deployment fees. If the function call doesn't change the current status, it will revert. Only the owner can call this method. Emits a `DeploymentFeeEnabled` event upon successful execution. Reverts with `DeploymentFeesAlreadyEnabled` if trying to enable when already enabled. Reverts with `DeploymentFeesAlreadyDisabled` if trying to disable when already disabled.","params":{"_isEnabled":"Determines if deployment fees are enabled (`true`) or disabled (`false`). emits DeploymentFeeEnabled When the new deployment fee status is set."}},"getDeploymentFee()":{"details":"This function provides details about the deployment fee, including the amount, token type, and the collector address.","returns":{"_0":"Fee struct containing:   - `fee`: The amount to be paid as the deployment fee.   - `feeToken`: Address of the token used for the deployment fee.   - `feeCollector`: Address that collects the deployment fees."}},"getFactory()":{"details":"The Factory contract is responsible for deploying TREX contracts. This function allows querying its address.","returns":{"_0":"Address of the current Factory contract."}},"getPublicDeploymentStatus()":{"details":"Indicates whether public deployments of TREX contracts are currently allowed.","returns":{"_0":"A boolean value representing the public deployment status: `true` if public deployments are allowed, `false` otherwise."}},"isDeployer(address)":{"details":"Determines if a specific address has permissions to deploy TREX contracts.","params":{"deployer":"Address to be checked for deployer permissions."},"returns":{"_0":"A boolean value indicating whether the provided address is an approved deployer (`true`) or not (`false`)."}},"isDeploymentFeeEnabled()":{"details":"Provides a way to determine if deployers are currently required to pay a fee when deploying TREX contracts.","returns":{"_0":"A boolean value indicating whether the deployment fee is enabled (`true`) or disabled (`false`)."}},"removeDeployer(address)":{"details":"Only an admin (owner or agent) can call this method. If the provided `deployer` address is not an approved deployer, the function will revert. Emits a `DeployerRemoved` event upon successful removal.","params":{"deployer":"Address to be removed from the list of approved deployers. emits DeployerRemoved Indicates that a deployer address has been successfully removed."}},"setDeploymentFee(uint256,address,address)":{"details":"Only the owner can call this method. The function establishes the amount, token type, and collector address for the deployment fee. Reverts if either the provided `_feeToken` or `_feeCollector` address is zero. Emits a `DeploymentFeeSet` event upon successful execution.","params":{"_fee":"The amount to be set as the deployment fee.","_feeCollector":"Address that will collect the deployment fees. emits DeploymentFeeSet Indicates that the deployment fee details have been successfully set.","_feeToken":"Address of the token used for the deployment fee."}},"setFactory(address)":{"details":"Only the owner can call this method. Emits a `FactorySet` event upon successful execution. Reverts if the provided factory address is zero.","params":{"factory":"The address of the new factory contract. emits FactorySet When the new factory address is set."}},"setPublicDeploymentStatus(bool)":{"details":"Enables or disables public deployments. If the function call doesn't change the current status, it will revert. Only the owner can call this method. Emits a `PublicDeploymentStatusSet` event upon successful execution. Reverts with `PublicDeploymentAlreadyEnabled` if trying to enable when already enabled. Reverts with `PublicDeploymentAlreadyDisabled` if trying to disable when already disabled.","params":{"_isEnabled":"Determines if public deployments are enabled (`true`) or disabled (`false`). emits PublicDeploymentStatusSet When the new public deployment status is set."}},"transferFactoryOwnership(address)":{"details":"Only the owner can call this method. Utilizes the `transferOwnership` function of the Ownable pattern.","params":{"_newOwner":"Address of the new owner for the Factory contract."}}},"version":1},"userdoc":{"kind":"user","methods":{"addDeployer(address)":{"notice":"Adds an address to the list of approved deployers."},"applyFeeDiscount(address,uint16)":{"notice":"Applies a fee discount to a specific deployer's address."},"batchAddDeployer(address[])":{"notice":"Adds multiple addresses to the list of approved deployers in a single transaction."},"batchApplyFeeDiscount(address[],uint16[])":{"notice":"Applies fee discounts to multiple deployers in a single transaction."},"batchDeployTREXSuite((address,string,string,uint8,address,address,address[],address[],address[],bytes[])[],(uint256[],address[],uint256[][])[])":{"notice":"Deploys multiple TREX suites of contracts in a single transaction using provided arrays of token and claim details."},"batchRemoveDeployer(address[])":{"notice":"Removes multiple addresses from the list of approved deployers in a single transaction."},"calculateFee(address)":{"notice":"Calculates the deployment fee for a given deployer after accounting for any discounts."},"deployTREXSuite((address,string,string,uint8,address,address,address[],address[],address[],bytes[]),(uint256[],address[],uint256[][]))":{"notice":"Deploys a TREX suite of contracts using provided token and claim details."},"enableDeploymentFee(bool)":{"notice":"Toggles the deployment fee status for TREX contracts."},"getDeploymentFee()":{"notice":"Retrieves the current deployment fee details."},"getFactory()":{"notice":"Retrieves the address of the current Factory contract."},"getPublicDeploymentStatus()":{"notice":"Retrieves the current public deployment status."},"isDeployer(address)":{"notice":"Checks if the provided address is an approved deployer."},"isDeploymentFeeEnabled()":{"notice":"Checks if the deployment fee is currently enabled."},"removeDeployer(address)":{"notice":"Removes an address from the list of approved deployers."},"setDeploymentFee(uint256,address,address)":{"notice":"Sets the deployment fee details for TREX contracts."},"setFactory(address)":{"notice":"Sets the factory contract address used for deploying TREX smart contracts."},"setPublicDeploymentStatus(bool)":{"notice":"Sets the status for public deployments of TREX contracts."},"transferFactoryOwnership(address)":{"notice":"Transfers the ownership of the Factory contract."}},"version":1}},"settings":{"remappings":["@onchain-id/solidity/contracts/=lib/onchain-id-solidity/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","onchain-id-solidity/=lib/onchain-id-solidity/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/factory/ITREXGateway.sol":"ITREXGateway"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/factory/ITREXFactory.sol":{"keccak256":"0xe8e483ca3f8e6e0590b86bff194aa8402b06614afbe214cf1a645bd6c014ea90","urls":["bzz-raw://4fdea3036e387b175e4fb3ce10f1a5a98ee359f5e281da5b1d64b0fba7b08ac2","dweb:/ipfs/QmQ2rKmVfErTpYMZYkz85A4RkCCYGZ7eMcF6cDiwKJSh5U"],"license":"GPL-3.0"},"contracts/factory/ITREXGateway.sol":{"keccak256":"0x51e0e72fd3cce091e7006f98c507d5b9e5dd0e05c7ca523fbc7e1ad45fa33b45","urls":["bzz-raw://ad64525807f2916a47ad3f766cff599b991a9f531d9397a47d8a992baea23314","dweb:/ipfs/QmZoEX9sinZz9eU2sa3unNqWfvThWUB9zaho953hxwuCAJ"],"license":"GPL-3.0"}},"version":1},"id":47}